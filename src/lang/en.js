export default {
  route: {
    dashboard: 'Dashboard',
    introduction: 'Introduction',
    documentation: 'Documentation',
    guide: 'Guide',
    permission: 'Permission',
    pagePermission: 'Page Permission',
    directivePermission: 'Directive Permission',
    icons: 'Icons',
    components: 'Components',
    componentIndex: 'Introduction',
    tinymce: 'Tinymce',
    markdown: 'Markdown',
    jsonEditor: 'JSON Editor',
    dndList: 'Dnd List',
    splitPane: 'SplitPane',
    avatarUpload: 'Avatar Upload',
    dropzone: 'Dropzone',
    sticky: 'Sticky',
    countTo: 'CountTo',
    componentMixin: 'Mixin',
    backToTop: 'BackToTop',
    dragDialog: 'Drag Dialog',
    dragSelect: 'Drag Select',
    dragKanban: 'Drag Kanban',
    charts: 'Charts',
    keyboardChart: 'Keyboard Chart',
    lineChart: 'Line Chart',
    mixChart: 'Mix Chart',
    example: 'Example',
    nested: 'Nested Routes',
    menu1: 'Menu 1',
    'menu1-1': 'Menu 1-1',
    'menu1-2': 'Menu 1-2',
    'menu1-2-1': 'Menu 1-2-1',
    'menu1-2-2': 'Menu 1-2-2',
    'menu1-3': 'Menu 1-3',
    menu2: 'Menu 2',
    Table: 'Table',
    dynamicTable: 'Dynamic Table',
    dragTable: 'Drag Table',
    inlineEditTable: 'Inline Edit',
    complexTable: 'Complex Table',
    treeTable: 'Tree Table',
    customTreeTable: 'Custom TreeTable',
    tab: 'Tab',
    form: 'Form',
    createArticle: 'Create Article',
    editArticle: 'Edit Article',
    articleList: 'Article List',
    errorPages: 'Error Pages',
    page401: '401',
    page404: '404',
    errorLog: 'Error Log',
    excel: 'Excel',
    exportExcel: 'Export Excel',
    selectExcel: 'Export Selected',
    uploadExcel: 'Upload Excel',
    zip: 'Zip',
    exportZip: 'Export Zip',
    theme: 'Theme',
    clipboardDemo: 'Clipboard',
    i18n: 'I18n',
    externalLink: 'External Link',
    Message: 'Message',
    Ali: 'AliCloud',
    AccountList: 'AccountList',
    EcsList: 'EcsList',
    CdnList: 'CdnList',
    CdnRefresh: 'CdnRefresh',
    Godaddy: 'Godaddy',
    DomainList: 'DomainList',
    CertificateList: 'CertificateList',
    Aws: 'AwsCloud',
    Ec2List: 'Ec2List',
    System: 'System',
    Parameter: 'Parameter',
    Resource: 'Resource',
    Hardware: 'Hardware',
    HardwareUpload: 'HardwareUpload'
  },
  navbar: {
    logOut: 'Log Out',
    dashboard: 'Dashboard',
    message: 'Message',
    restPwd: 'Reset Password',
    github: 'Github',
    screenfull: 'Screenfull',
    theme: 'Theme',
    size: 'Global Size'
  },
  login: {
    title: 'Login Form',
    logIn: 'Log in',
    username: 'Username',
    password: 'Password',
    any: 'any',
    thirdparty: 'Or connect with',
    thirdpartyTips: 'Can not be simulated on local, so please combine you own business simulation! ! !'
  },
  documentation: {
    documentation: 'Documentation',
    github: 'Github Repository'
  },
  permission: {
    roles: 'Your roles',
    switchRoles: 'Switch roles',
    tips: 'In some cases it is not suitable to use v-permission, such as element Tab component or el-table-column and other asynchronous rendering dom cases which can only be achieved by manually setting the v-if.'
  },
  guide: {
    description: 'The guide page is useful for some people who entered the project for the first time. You can briefly introduce the features of the project. Demo is based on ',
    button: 'Show Guide'
  },
  components: {
    documentation: 'Documentation',
    tinymceTips: 'Rich text editor is a core part of management system, but at the same time is a place with lots of problems. In the process of selecting rich texts, I also walked a lot of detours. The common rich text editors in the market are basically used, and the finally chose Tinymce. See documentation for more detailed rich text editor comparisons and introductions.',
    dropzoneTips: 'Because my business has special needs, and has to upload images to qiniu, so instead of a third party, I chose encapsulate it by myself. It is very simple, you can see the detail code in @/components/Dropzone.',
    stickyTips: 'when the page is scrolled to the preset position will be sticky on the top.',
    backToTopTips1: 'When the page is scrolled to the specified position, the Back to Top button appears in the lower right corner',
    backToTopTips2: 'You can customize the style of the button, show / hide, height of appearance, height of the return. If you need a text prompt, you can use element-ui el-tooltip elements externally',
    imageUploadTips: 'Since I was using only the vue@1 version, and it is not compatible with mockjs at the moment, I modified it myself, and if you are going to use it, it is better to use official version.'
  },
  table: {
    create: 'Create',
    update: 'Update',
    dynamicTips1: 'Fixed header, sorted by header order',
    dynamicTips2: 'Not fixed header, sorted by click order',
    dragTips1: 'The default order',
    dragTips2: 'The after dragging order',
    title: 'Title',
    importance: 'Imp',
    type: 'Type',
    remark: 'Remark',
    search: 'Search',
    add: 'Add',
    export: 'Export',
    reviewer: 'reviewer',
    id: 'ID',
    date: 'Date',
    author: 'Author',
    readings: 'Readings',
    status: 'Status',
    actions: 'Actions',
    edit: 'Edit',
    publish: 'Publish',
    draft: 'Draft',
    delete: 'Delete',
    cancel: 'Cancel',
    confirm: 'Confirm',
    reset: 'Reset',
    allFinish: 'AllFinish',
    allDeprecated: 'AllDeprecated',
    allNoDeprecated: 'AllNoDeprecated',
    allDelete: 'AllDelete',
    refreshCache: 'RefreshCache',
    operLog: 'OperateLog',
    operContent: 'OperateContent',
    operType: 'OperateType',
    operTime: 'OperateTime',
    refreshType: 'RefreshType',
    taskId: 'TaskId',
    progress: 'Progress',
    url: 'URL',
    alarm: 'Alarm',
    deprecated: 'Deprecated',
    unDeprecated: 'UnDeprecated',
    deprecatedData: 'Deprecated Data',
    deprecatedMessage: 'TIPS : Deprecated data is not displayed by default & deprecated data does not alarm.',
    expiring: 'Expiring',
    open: 'Open',
    close: 'Close',
    key: 'KEY',
    systemKey: 'System Key',
    value: 'VALUE',
    off: 'OFF',
    on: 'ON',
    upload: 'Upload',
    clear: 'Clear',
    downloadExample: 'Download Example',
    user: {
      username: 'Username',
      oldPwd: 'Old Password',
      newPwd: 'New Password',
      confirmPwd: 'Confirm Password'
    },
    ali: {
      username: 'NAME',
      accessKeyId: 'ACCESS ID',
      accessKeySecret: 'ACCESS SECRET',
      account: {
        noMoney: 'No Enough',
        update: 'UPDATE',
        create: 'CREATE'
      },
      ecs: {
        createdTime: 'CreatedTime',
        expiredTime: 'ExpiredTime',
        hostName: 'HostName',
        instance: 'Instance',
        publicIps: 'PublicIps',
        regionId: 'RegionId',
        stop: 'STOP',
        run: 'START',
        rerun: 'REBOOT',
        free: 'DELETE',
        actionConfirmT1: 'Confirm to ',
        actionConfirmT2: ' the ECS ?',
        ifForce: 'Force Mode',
        forceTip: 'Forced mode causes data that is not currently saved by the cloud server instance to be lost.',
      }
    },
    aws: {
      username: 'NAME',
      region: 'Region',
      launchTime: 'LaunchTime',
      imageId: 'ImageId',
      instanceId: 'InstanceId',
      instanceType: 'InstanceType',
      kernelId: 'KernelId',
      keyName: 'KeyName',
      platform: 'Platform',
      privateDnsName: 'PrivateDnsName',
      privateIpAddress: 'PrivateIpAddress',
      publicDnsName: 'PublicDnsName',
      publicIpAddress: 'PublicIpAddress',
      ramdiskId: 'RamdiskId',
      stateTransitionReason: 'StateTransitionReason',
      subnetId: 'SubnetId',
      vpcId: 'VpcId',
      architecture: 'Architecture',
      rootDeviceName: 'RootDeviceName',
      rootDeviceType: 'RootDeviceType',
    },
    resource: {
      username: 'Username',
      password: 'Password',
      cabinet: 'Cabinet',
      model: 'Model',
      assetNumber: 'AssetNumber',
      sn: 'SN',
      operateSystem: 'OperateSystem',
      effect: 'Effect',
      externalIp: 'ExternalIp',
      externalMainLine: 'ExternalMainLine',
      externalBackupLine: 'ExternalBackupLine',
      intranetIp: 'IntranetIp',
      manageCardIp: 'ManageCardIp',
      mask: 'Mask',
      remotePort: 'RemotePort',
      intranetPort: 'IntranetPort',
      managePort: 'ManagePort',
      externalPort: 'ExternalPort',
      cpu: 'CPU',
      memory: 'Memory',
      raid: 'RAID',
      hardDisk: 'HardDisk',
      power: 'Power',
      uNumber: 'UNumber',
      remark: 'Remark'
    }
  },
  errorLog: {
    tips: 'Please click the bug icon in the upper right corner',
    description: 'Now the management system are basically the form of the spa, it enhances the user experience, but it also increases the possibility of page problems, a small negligence may lead to the entire page deadlock. Fortunately Vue provides a way to catch handling exceptions, where you can handle errors or report exceptions.',
    documentation: 'Document introduction'
  },
  excel: {
    export: 'Export',
    selectedExport: 'Export Selected Items',
    placeholder: 'Please enter the file name(default excel-list)'
  },
  zip: {
    export: 'Export',
    placeholder: 'Please enter the file name(default file)'
  },
  pdf: {
    tips: 'Here we use window.print() to implement the feature of downloading pdf.'
  },
  theme: {
    change: 'Change Theme',
    documentation: 'Theme documentation',
    tips: 'Tips: It is different from the theme-pick on the navbar is two different skinning methods, each with different application scenarios. Refer to the documentation for details.'
  },
  tagsView: {
    refresh: 'Refresh',
    close: 'Close',
    closeOthers: 'Close Others',
    closeAll: 'Close All'
  },
  message: {
    success: 'SUCCESS',
    operSuccess: 'OPERATE SUCCESS',
    confirmTitle: 'CONFIRM?',
    confirm: 'CONFIRM',
    cancel: 'CANCEL',
    doing: 'DOING...',
    parameter: {
      fixedNoEdit: 'System fixed parameters cannot be edited.',
      fixedNoRemove: 'System fixed parameters cannot be removed.',
      valueToOrigin: 'The value has been restored to the original value.'
    },
    hardware: {
      fileTooMuch: 'Please do not upload files larger than 1m in size.',
      dataEmpty: 'Hardware data is empty, please upload.',
      needCabinet: 'Cabinet can not be empty.'
    }
  }
}
